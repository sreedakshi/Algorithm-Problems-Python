def merge_intervals(intervals):

    output = []
    output.append(intervals[0])

    for i in range(1,len(intervals)):
        last_added_interval = output[-1]
        curr_start = intervals[i][0]
        curr_end = intervals[i][1]
        prev_end = last_added_interval[1]
        prev_start = last_added_interval[0]

        if (curr_start <= prev_end):
            output[-1][1] = max(curr_end, prev_end)
        else:
            output.append(intervals[i])

    return output

# Time Complexity: The time complexity of this solution is O(n), where n is the number of intervals in the input list.

# Space Complexity: The space complexity of this solution is O(1), since we only use constant space other than the input and output data structures.
